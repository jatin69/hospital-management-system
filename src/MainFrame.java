/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package hospitalmanagement;

import hospitalmanagement.MyDB.Delete;
import hospitalmanagement.MyDB.Insert;
import hospitalmanagement.MyDB.Select;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import static java.lang.Integer.parseInt;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ButtonGroup;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Jatin
 */
public class MainFrame extends javax.swing.JFrame {

    /**
     * Creates new form MainFrame
     */
    public MainFrame() {
        initComponents();
        
        Dimension objDimension = Toolkit.getDefaultToolkit().getScreenSize();
            int iCoordX = (objDimension.width - this.getWidth()) / 2;
            int iCoordY = (objDimension.height - this.getHeight()) / 2;
            this.setLocation(iCoordX, iCoordY); 

        // code to logically clubup radio buttons for gender
        ButtonGroup gender = new ButtonGroup();
        gender.add(maleRadioButton);
        gender.add(femaleRadioButton);

       // addPatientPanel.getRootPane().setDefaultButton(savepatientButton);
        // add this feature "Enter button action"
        // MainFrame.getRootPane().setDefaultButton(saveButton);
//addressScrollPane.setAutoscrolls(true);
//addressScrollPane.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_AS_NEEDED);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanel = new javax.swing.JPanel();
        menuPanel = new javax.swing.JPanel();
        homeButton = new javax.swing.JButton();
        addPatientButton = new javax.swing.JButton();
        addTreatmentButton = new javax.swing.JButton();
        dischargePatientButton = new javax.swing.JButton();
        searchButton = new javax.swing.JButton();
        addDoctorButton = new javax.swing.JButton();
        activityPanel = new javax.swing.JPanel();
        homePanel = new javax.swing.JPanel();
        title = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        addPatientPanel = new javax.swing.JPanel();
        patientNameLabel = new javax.swing.JLabel();
        dobLabel = new javax.swing.JLabel();
        sexLabel = new javax.swing.JLabel();
        addressLabel = new javax.swing.JLabel();
        patientContactNoLabel = new javax.swing.JLabel();
        patientNameTextField = new javax.swing.JTextField();
        dateChooser = new com.toedter.calendar.JDateChooser();
        patientContactNoTextField = new javax.swing.JTextField();
        savepatientButton = new javax.swing.JButton();
        addressScrollPane = new javax.swing.JScrollPane();
        addressTextArea = new javax.swing.JTextArea();
        maleRadioButton = new javax.swing.JRadioButton();
        femaleRadioButton = new javax.swing.JRadioButton();
        addTreatmentPanel = new javax.swing.JPanel();
        doctorIdLabel = new javax.swing.JLabel();
        doctorIdTextField = new javax.swing.JTextField();
        patientidLabel = new javax.swing.JLabel();
        patientIdTextField = new javax.swing.JTextField();
        prescriptionLabel = new javax.swing.JLabel();
        prescriptionScrollPane = new javax.swing.JScrollPane();
        prescriptionTextArea = new javax.swing.JTextArea();
        savetreatmentButton = new javax.swing.JButton();
        dischargePatientPanel = new javax.swing.JPanel();
        delPatientIdLabel = new javax.swing.JLabel();
        delPatientIdTextField = new javax.swing.JTextField();
        delPatientFindButton = new javax.swing.JButton();
        delPatientDetailsPanel = new javax.swing.JPanel();
        delPatientConfirmDischargeButton = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        nameDispLabel = new javax.swing.JLabel();
        dobDispLabel = new javax.swing.JLabel();
        addressDispLabel = new javax.swing.JLabel();
        contactDispLabel = new javax.swing.JLabel();
        delPatientCancelDeleteButton = new javax.swing.JButton();
        searchPanel = new javax.swing.JPanel();
        patientNameSearchLabel = new javax.swing.JLabel();
        patientNameSearchTextField = new javax.swing.JTextField();
        patientIdSearchLabel = new javax.swing.JLabel();
        patientIdSearchTextField = new javax.swing.JTextField();
        searchResultPanel = new javax.swing.JPanel();
        resultTableScrollPane = new javax.swing.JScrollPane();
        resultTable = new javax.swing.JTable();
        searchUsingLabel = new javax.swing.JLabel();
        searchUsingNameButton = new javax.swing.JButton();
        searchUsingIdButton = new javax.swing.JButton();
        orLabel = new javax.swing.JLabel();
        displayAllButton = new javax.swing.JButton();
        addDoctorPanel = new javax.swing.JPanel();
        doctorNameLabel = new javax.swing.JLabel();
        doctorNameTextField = new javax.swing.JTextField();
        specializationLabel = new javax.swing.JLabel();
        specializationTextField = new javax.swing.JTextField();
        doctorContactNoLabel = new javax.swing.JLabel();
        doctorContactNoTextField = new javax.swing.JTextField();
        saveDoctorButton = new javax.swing.JButton();
        consultingFeeTextField = new javax.swing.JTextField();
        consultingFeeLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        homeButton.setText("Home");
        homeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homeButtonActionPerformed(evt);
            }
        });

        addPatientButton.setText("Add Patient");
        addPatientButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addPatientButtonActionPerformed(evt);
            }
        });

        addTreatmentButton.setText("Add Treatment");
        addTreatmentButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addTreatmentButtonActionPerformed(evt);
            }
        });

        dischargePatientButton.setText("Discharge patient");
        dischargePatientButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dischargePatientButtonActionPerformed(evt);
            }
        });

        searchButton.setText("Search Patient");
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        addDoctorButton.setText("Add Doctor");
        addDoctorButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addDoctorButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout menuPanelLayout = new javax.swing.GroupLayout(menuPanel);
        menuPanel.setLayout(menuPanelLayout);
        menuPanelLayout.setHorizontalGroup(
            menuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(menuPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(homeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(menuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(menuPanelLayout.createSequentialGroup()
                        .addComponent(addPatientButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(addTreatmentButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(addDoctorButton))
                    .addGroup(menuPanelLayout.createSequentialGroup()
                        .addComponent(dischargePatientButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(searchButton)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        menuPanelLayout.setVerticalGroup(
            menuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(menuPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(menuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(menuPanelLayout.createSequentialGroup()
                        .addGroup(menuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(addPatientButton)
                            .addComponent(addTreatmentButton)
                            .addComponent(addDoctorButton))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(menuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(dischargePatientButton)
                            .addComponent(searchButton))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(homeButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        activityPanel.setLayout(new java.awt.CardLayout());

        title.setFont(new java.awt.Font("Courier New", 1, 30)); // NOI18N
        title.setText("HOSPITAL MANAGEMENT SYSTEM");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 534, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 294, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout homePanelLayout = new javax.swing.GroupLayout(homePanel);
        homePanel.setLayout(homePanelLayout);
        homePanelLayout.setHorizontalGroup(
            homePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, homePanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(title, javax.swing.GroupLayout.PREFERRED_SIZE, 486, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22))
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        homePanelLayout.setVerticalGroup(
            homePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(homePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(title, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        activityPanel.add(homePanel, "card2");

        patientNameLabel.setText("Name ");

        dobLabel.setText("Date of birth");

        sexLabel.setText("Sex");

        addressLabel.setText("address");

        patientContactNoLabel.setText("contact no.");

        dateChooser.setDateFormatString("yyyy-MM-dd ");
        dateChooser.setMaxSelectableDate(new java.util.Date(1451586600000L));
        dateChooser.setMinSelectableDate(new java.util.Date(-2209008600000L));

        savepatientButton.setText("SAVE");
        savepatientButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                savepatientButtonActionPerformed(evt);
            }
        });

        addressTextArea.setColumns(20);
        addressTextArea.setLineWrap(true);
        addressTextArea.setRows(5);
        addressTextArea.setName(""); // NOI18N
        addressTextArea.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                addressTextAreaKeyPressed(evt);
            }
        });
        addressScrollPane.setViewportView(addressTextArea);

        maleRadioButton.setText("Male");

        femaleRadioButton.setText("Female");

        javax.swing.GroupLayout addPatientPanelLayout = new javax.swing.GroupLayout(addPatientPanel);
        addPatientPanel.setLayout(addPatientPanelLayout);
        addPatientPanelLayout.setHorizontalGroup(
            addPatientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addPatientPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(addPatientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, addPatientPanelLayout.createSequentialGroup()
                        .addComponent(patientContactNoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(patientContactNoTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, addPatientPanelLayout.createSequentialGroup()
                        .addGroup(addPatientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(patientNameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 71, Short.MAX_VALUE)
                            .addComponent(sexLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(patientNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, addPatientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(savepatientButton, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(addPatientPanelLayout.createSequentialGroup()
                            .addGroup(addPatientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(addressLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(dobLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 71, Short.MAX_VALUE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(addPatientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(dateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(addPatientPanelLayout.createSequentialGroup()
                                    .addComponent(maleRadioButton)
                                    .addGap(10, 10, 10)
                                    .addComponent(femaleRadioButton))
                                .addComponent(addressScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 296, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(153, Short.MAX_VALUE))
        );
        addPatientPanelLayout.setVerticalGroup(
            addPatientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addPatientPanelLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(addPatientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(patientNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(patientNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(addPatientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(sexLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(addPatientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(maleRadioButton)
                        .addComponent(femaleRadioButton)))
                .addGap(5, 5, 5)
                .addGroup(addPatientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(dobLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(14, 14, 14)
                .addGroup(addPatientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(addressLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addressScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(addPatientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(patientContactNoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(patientContactNoTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addComponent(savepatientButton, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        activityPanel.add(addPatientPanel, "card2");

        doctorIdLabel.setText("Doctor id");

        patientidLabel.setText("Patient id ");

        prescriptionLabel.setText("Prescription ");

        prescriptionTextArea.setColumns(20);
        prescriptionTextArea.setRows(5);
        prescriptionTextArea.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                prescriptionTextAreaKeyPressed(evt);
            }
        });
        prescriptionScrollPane.setViewportView(prescriptionTextArea);

        savetreatmentButton.setText("SAVE");
        savetreatmentButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                savetreatmentButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout addTreatmentPanelLayout = new javax.swing.GroupLayout(addTreatmentPanel);
        addTreatmentPanel.setLayout(addTreatmentPanelLayout);
        addTreatmentPanelLayout.setHorizontalGroup(
            addTreatmentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addTreatmentPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(addTreatmentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(savetreatmentButton, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(addTreatmentPanelLayout.createSequentialGroup()
                        .addGroup(addTreatmentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(prescriptionLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 68, Short.MAX_VALUE)
                            .addComponent(patientidLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(doctorIdLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(addTreatmentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(addTreatmentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(doctorIdTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(patientIdTextField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(prescriptionScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 315, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(137, Short.MAX_VALUE))
        );
        addTreatmentPanelLayout.setVerticalGroup(
            addTreatmentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addTreatmentPanelLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(addTreatmentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(doctorIdLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(doctorIdTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(addTreatmentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(patientIdTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(patientidLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(addTreatmentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(prescriptionLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(prescriptionScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(savetreatmentButton, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(155, Short.MAX_VALUE))
        );

        activityPanel.add(addTreatmentPanel, "card2");

        delPatientIdLabel.setText("Patient ID");

        delPatientFindButton.setText("Find");
        delPatientFindButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delPatientFindButtonActionPerformed(evt);
            }
        });

        delPatientDetailsPanel.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                delPatientDetailsPanelComponentShown(evt);
            }
        });

        delPatientConfirmDischargeButton.setText("Confirm Discharge");
        delPatientConfirmDischargeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delPatientConfirmDischargeButtonActionPerformed(evt);
            }
        });

        jLabel4.setText("Name");

        jLabel5.setText("DOB");

        jLabel6.setText("Address");

        jLabel7.setText("Contact No.");

        delPatientCancelDeleteButton.setText("Cancel");
        delPatientCancelDeleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delPatientCancelDeleteButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout delPatientDetailsPanelLayout = new javax.swing.GroupLayout(delPatientDetailsPanel);
        delPatientDetailsPanel.setLayout(delPatientDetailsPanelLayout);
        delPatientDetailsPanelLayout.setHorizontalGroup(
            delPatientDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(delPatientDetailsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(delPatientDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(delPatientDetailsPanelLayout.createSequentialGroup()
                        .addGroup(delPatientDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, 67, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(delPatientDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(nameDispLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(dobDispLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(contactDispLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(delPatientDetailsPanelLayout.createSequentialGroup()
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(addressDispLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(delPatientDetailsPanelLayout.createSequentialGroup()
                        .addGap(88, 88, 88)
                        .addComponent(delPatientConfirmDischargeButton)
                        .addGap(18, 18, 18)
                        .addComponent(delPatientCancelDeleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(207, Short.MAX_VALUE))
        );
        delPatientDetailsPanelLayout.setVerticalGroup(
            delPatientDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, delPatientDetailsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(delPatientDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(nameDispLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(delPatientDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(dobDispLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(delPatientDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(contactDispLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(delPatientDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(delPatientDetailsPanelLayout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(72, 72, 72)
                        .addGroup(delPatientDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(delPatientConfirmDischargeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(delPatientCancelDeleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(addressDispLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 126, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout dischargePatientPanelLayout = new javax.swing.GroupLayout(dischargePatientPanel);
        dischargePatientPanel.setLayout(dischargePatientPanelLayout);
        dischargePatientPanelLayout.setHorizontalGroup(
            dischargePatientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dischargePatientPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(dischargePatientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(delPatientFindButton)
                    .addGroup(dischargePatientPanelLayout.createSequentialGroup()
                        .addComponent(delPatientIdLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(delPatientIdTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(339, Short.MAX_VALUE))
            .addComponent(delPatientDetailsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        dischargePatientPanelLayout.setVerticalGroup(
            dischargePatientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dischargePatientPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(dischargePatientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(delPatientIdLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(delPatientIdTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(delPatientFindButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(delPatientDetailsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        activityPanel.add(dischargePatientPanel, "card2");

        patientNameSearchLabel.setText("Patient Name");

        patientIdSearchLabel.setText("Patient ID");

        searchResultPanel.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                searchResultPanelComponentShown(evt);
            }
        });
        searchResultPanel.setLayout(new java.awt.BorderLayout());

        resultTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        resultTableScrollPane.setViewportView(resultTable);

        searchResultPanel.add(resultTableScrollPane, java.awt.BorderLayout.CENTER);

        searchUsingLabel.setText("Search by using :");

        searchUsingNameButton.setText("Name");
        searchUsingNameButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchUsingNameButtonActionPerformed(evt);
            }
        });

        searchUsingIdButton.setText("ID");
        searchUsingIdButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchUsingIdButtonActionPerformed(evt);
            }
        });

        orLabel.setText("OR");

        displayAllButton.setText("Display ALL");
        displayAllButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                displayAllButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout searchPanelLayout = new javax.swing.GroupLayout(searchPanel);
        searchPanel.setLayout(searchPanelLayout);
        searchPanelLayout.setHorizontalGroup(
            searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(searchResultPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 534, Short.MAX_VALUE)
            .addGroup(searchPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(searchPanelLayout.createSequentialGroup()
                        .addGroup(searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(patientIdSearchLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(patientNameSearchLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 76, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(patientNameSearchTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 128, Short.MAX_VALUE)
                            .addComponent(patientIdSearchTextField)))
                    .addGroup(searchPanelLayout.createSequentialGroup()
                        .addComponent(searchUsingLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(searchUsingNameButton, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(searchUsingIdButton, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(orLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(displayAllButton)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        searchPanelLayout.setVerticalGroup(
            searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(searchPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(patientNameSearchLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(patientNameSearchTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(patientIdSearchLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(patientIdSearchTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchUsingNameButton)
                    .addComponent(searchUsingIdButton)
                    .addComponent(searchUsingLabel)
                    .addComponent(orLabel)
                    .addComponent(displayAllButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addComponent(searchResultPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        activityPanel.add(searchPanel, "card2");

        doctorNameLabel.setText("Name ");

        specializationLabel.setText("Specialization");

        doctorContactNoLabel.setText("contact no.");

        saveDoctorButton.setText("SAVE");
        saveDoctorButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveDoctorButtonActionPerformed(evt);
            }
        });

        consultingFeeLabel.setText("Consulting fee ( Rs. )");

        javax.swing.GroupLayout addDoctorPanelLayout = new javax.swing.GroupLayout(addDoctorPanel);
        addDoctorPanel.setLayout(addDoctorPanelLayout);
        addDoctorPanelLayout.setHorizontalGroup(
            addDoctorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addDoctorPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(addDoctorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(saveDoctorButton, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(addDoctorPanelLayout.createSequentialGroup()
                        .addGroup(addDoctorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(consultingFeeLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(doctorContactNoLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(specializationLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(doctorNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(addDoctorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(doctorNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(addDoctorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(consultingFeeTextField, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(doctorContactNoTextField, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(specializationTextField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(244, Short.MAX_VALUE))
        );
        addDoctorPanelLayout.setVerticalGroup(
            addDoctorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addDoctorPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(addDoctorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(doctorNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(doctorNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(addDoctorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(specializationLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(specializationTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(addDoctorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(doctorContactNoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(doctorContactNoTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(addDoctorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(consultingFeeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(consultingFeeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addComponent(saveDoctorButton, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(198, Short.MAX_VALUE))
        );

        activityPanel.add(addDoctorPanel, "card2");

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(menuPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(activityPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addComponent(menuPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25)
                .addComponent(activityPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void homeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homeButtonActionPerformed
        // removing old panel
        activityPanel.removeAll();
        activityPanel.repaint();
        activityPanel.revalidate();

        // adding the new panel
        activityPanel.add(homePanel);
        activityPanel.repaint();
        activityPanel.revalidate();

    }//GEN-LAST:event_homeButtonActionPerformed

    private void addPatientButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addPatientButtonActionPerformed
        // removing old panel
        activityPanel.removeAll();
        activityPanel.repaint();
        activityPanel.revalidate();

        // adding the new panel
        activityPanel.add(addPatientPanel);
        activityPanel.repaint();
        activityPanel.revalidate();
        /*
         for (Component C : this.getComponents()) {
         if (C instanceof JTextField || C instanceof JTextArea) {
        
         ((JTextComponent) C).setText("");
         }
         }*/
    }//GEN-LAST:event_addPatientButtonActionPerformed

    private void addTreatmentButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addTreatmentButtonActionPerformed
        // removing old panel
        activityPanel.removeAll();
        activityPanel.repaint();
        activityPanel.revalidate();

        // adding the new panel
        activityPanel.add(addTreatmentPanel);
        activityPanel.repaint();
        activityPanel.revalidate();
    }//GEN-LAST:event_addTreatmentButtonActionPerformed

    private void dischargePatientButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dischargePatientButtonActionPerformed
        // removing old panel
        activityPanel.removeAll();
        activityPanel.repaint();
        activityPanel.revalidate();

        // adding the new panel
        activityPanel.add(dischargePatientPanel);
        activityPanel.repaint();
        activityPanel.revalidate();

        delPatientDetailsPanel.setVisible(false);

    }//GEN-LAST:event_dischargePatientButtonActionPerformed

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        // removing old panel
        activityPanel.removeAll();
        activityPanel.repaint();
        activityPanel.revalidate();

        // adding the new panel
        activityPanel.add(searchPanel);
        activityPanel.repaint();
        activityPanel.revalidate();
        searchResultPanel.setVisible(false);

    }//GEN-LAST:event_searchButtonActionPerformed
    private void savepatientButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_savepatientButtonActionPerformed

        String name, sex, dob, address, contact = "";

        name = patientNameTextField.getText();
        if (name.equals("")) {
            JOptionPane.showMessageDialog(null, "Name cannot be left empty!", "Error", JOptionPane.WARNING_MESSAGE);
            return;
        }

        if (maleRadioButton.isSelected()) {
            sex = "Male";
        } else if (femaleRadioButton.isSelected()) {
            sex = "Female";
        } else {
            JOptionPane.showMessageDialog(null, "Sex cannot be left empty!", "Error", JOptionPane.WARNING_MESSAGE);
            return;
        }

        dob = ((JTextField) dateChooser.getDateEditor().getUiComponent()).getText();
        if (dob.equals("")) {
            JOptionPane.showMessageDialog(null, "Date cannot be left empty!", "Error", JOptionPane.WARNING_MESSAGE);
            return;
        }

        address = addressTextArea.getText();
        if (address.equals("")) {
            JOptionPane.showMessageDialog(null, "address cannot be left empty!", "Error", JOptionPane.WARNING_MESSAGE);
            return;
        }

        contact = patientContactNoTextField.getText();

        if (contact.equals("")) {
            JOptionPane.showMessageDialog(null, "Contact No. cannot be left empty!", "Error", JOptionPane.WARNING_MESSAGE);
            return;
        }

        try {
            Insert.InsertPatient(name, sex, dob, address, contact);
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_savepatientButtonActionPerformed

    private void addressTextAreaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_addressTextAreaKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_TAB) {
            if (evt.getModifiers() > 0) {
                addressTextArea.transferFocusBackward();
            } else {
                addressTextArea.transferFocus();
            }
            evt.consume();
        }
    }//GEN-LAST:event_addressTextAreaKeyPressed

    private void savetreatmentButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_savetreatmentButtonActionPerformed

        int doctorId;
        if (doctorIdTextField.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Doctor ID cannot be left empty!", "Error", JOptionPane.WARNING_MESSAGE);
            return;
        }

        try {
            doctorId = parseInt(doctorIdTextField.getText());
        } catch (NumberFormatException e) // if it is not an integer
        {
            JOptionPane.showMessageDialog(null, "Doctor ID  must be a number !! ", "Error", JOptionPane.WARNING_MESSAGE);
            return;
        }

        int patientId;
        if (patientIdTextField.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Patient ID cannot be left empty!", "Error", JOptionPane.WARNING_MESSAGE);
            return;
        }
        try {
            patientId = parseInt(patientIdTextField.getText());
        } catch (NumberFormatException e) // if it is not an integer
        {
            JOptionPane.showMessageDialog(null, "Patient ID  must be a number !! ", "Error", JOptionPane.WARNING_MESSAGE);
            return;
        }
        String prescription = prescriptionTextArea.getText();
        if (prescription.equals("")) {
            JOptionPane.showMessageDialog(null, "Prescription cannot be left empty!", "Error", JOptionPane.WARNING_MESSAGE);
            return;
        }

        try {
            Insert.InsertTreatment(doctorId, patientId, prescription);
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_savetreatmentButtonActionPerformed

    private void addDoctorButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addDoctorButtonActionPerformed
        // removing old panel
        activityPanel.removeAll();
        activityPanel.repaint();
        activityPanel.revalidate();

        // adding the new panel
        activityPanel.add(addDoctorPanel);
        activityPanel.repaint();
        activityPanel.revalidate();

    }//GEN-LAST:event_addDoctorButtonActionPerformed

    private void prescriptionTextAreaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_prescriptionTextAreaKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_TAB) {
            if (evt.getModifiers() > 0) {
                prescriptionTextArea.transferFocusBackward();
            } else {
                prescriptionTextArea.transferFocus();
            }
            evt.consume();
        }
    }//GEN-LAST:event_prescriptionTextAreaKeyPressed

    private void saveDoctorButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveDoctorButtonActionPerformed

        String doctorName = doctorNameTextField.getText();
        if (doctorName.equals("")) {
            JOptionPane.showMessageDialog(null, "Name cannot be left empty!", "Error", JOptionPane.WARNING_MESSAGE);
            return;
        }

        String specialization = specializationTextField.getText();
        if (specialization.equals("")) {
            JOptionPane.showMessageDialog(null, "Specialization cannot be left empty!", "Error", JOptionPane.WARNING_MESSAGE);
            return;
        }

        String doctorContactNo = doctorContactNoTextField.getText();
        if (doctorContactNo.equals("")) {
            JOptionPane.showMessageDialog(null, "Contact No. cannot be left empty!", "Error", JOptionPane.WARNING_MESSAGE);
            return;
        }
        int consultingFee;
        if (consultingFeeTextField.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Consulting Fee cannot be left empty!", "Error", JOptionPane.WARNING_MESSAGE);
            return;
        }
        try {
            consultingFee = parseInt(consultingFeeTextField.getText());
        } catch (NumberFormatException e) // if it is not an integer
        {
            JOptionPane.showMessageDialog(null, "Consulting fee must be a number !! ", "Error", JOptionPane.WARNING_MESSAGE);
            return;
        }

        try {
            Insert.InsertDoctor(doctorName, specialization, doctorContactNo, consultingFee);
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_saveDoctorButtonActionPerformed

    private void delPatientFindButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delPatientFindButtonActionPerformed

        int delPatientId;
        if (delPatientIdTextField.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Patient ID cannot be left empty!", "Error", JOptionPane.WARNING_MESSAGE);
            return;
        }
        try {
            delPatientId = parseInt(delPatientIdTextField.getText());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Patient ID must be a number ! ", "Error", JOptionPane.WARNING_MESSAGE);
            return;
        }

        ArrayList<String> foundPatient = null;
        try {
            foundPatient = Select.searchPatientById(delPatientId);
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        if (foundPatient != null) {
            nameDispLabel.setText(foundPatient.get(1));
            dobDispLabel.setText(foundPatient.get(3));
            addressDispLabel.setText(foundPatient.get(4));
            contactDispLabel.setText(foundPatient.get(5));
            delPatientDetailsPanel.setVisible(true);
        } else {
            delPatientIdTextField.setText("");
        }

    }//GEN-LAST:event_delPatientFindButtonActionPerformed

    private void delPatientConfirmDischargeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delPatientConfirmDischargeButtonActionPerformed

        int delPatientId = parseInt(delPatientIdTextField.getText());

        try {
            Delete.deletePatient(delPatientId);
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_delPatientConfirmDischargeButtonActionPerformed

    private void delPatientDetailsPanelComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_delPatientDetailsPanelComponentShown
    }//GEN-LAST:event_delPatientDetailsPanelComponentShown

    private void delPatientCancelDeleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delPatientCancelDeleteButtonActionPerformed
        // removing old panel
        activityPanel.removeAll();
        activityPanel.repaint();
        activityPanel.revalidate();

        // adding the new panel
        activityPanel.add(dischargePatientPanel);
        activityPanel.repaint();
        activityPanel.revalidate();

        delPatientIdTextField.setText("");
        delPatientDetailsPanel.setVisible(false);
    }//GEN-LAST:event_delPatientCancelDeleteButtonActionPerformed

    /* public boolean isCellEditable(int row, int column) {
     //all cells false
     return false;
     }*/

    private void searchUsingNameButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchUsingNameButtonActionPerformed

        String patientName = patientNameSearchTextField.getText();
        if (patientName.equals("")) {
            JOptionPane.showMessageDialog(null, "Name is empty !!", "Error", JOptionPane.WARNING_MESSAGE);
            return;
        }

        ArrayList<ArrayList<String>> foundPatients = null;
        try {
            foundPatients = Select.searchPatientByName(patientName);
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        if (foundPatients != null) {
            int noOfRows = foundPatients.size();
            int noOfColumns = foundPatients.get(0).size();
            int iRow;
            int iColumn;

            DefaultTableModel resultTableModel = (DefaultTableModel) resultTable.getModel();
            resultTableModel.setRowCount(0);
            resultTableModel.setColumnCount(noOfColumns);
            String columnNames[] = {"Patient ID", "Name", "Gender", "Date of Birth", "address", "contact No"};
            resultTableModel.setColumnIdentifiers(columnNames);

            // get no of rows and columns in foundPatients
            for (iRow = 0; iRow < noOfRows; iRow++) {
                Object[] columnValue = new Object[noOfColumns];
                for (iColumn = 0; iColumn < noOfColumns; iColumn++) {
                    columnValue[iColumn] = foundPatients.get(iRow).get(iColumn);
                }
                resultTableModel.addRow(columnValue);
            }

            searchResultPanel.setVisible(true);
        }
    }//GEN-LAST:event_searchUsingNameButtonActionPerformed

    private void searchUsingIdButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchUsingIdButtonActionPerformed

        int patientId;
        if (patientIdSearchTextField.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Patient ID cannot be left empty!", "Error", JOptionPane.WARNING_MESSAGE);
            return;
        }
        try {
            patientId = parseInt(patientIdSearchTextField.getText());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Patient ID must be a number ! ", "Error", JOptionPane.WARNING_MESSAGE);
            return;
        }

        ArrayList<String> foundPatient = null;
        try {
            foundPatient = Select.searchPatientById(patientId);
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }

        // use the foundPatient - 1D and put its contents in a table 
        if (foundPatient != null) {
            int noOfColumns = foundPatient.size();
            int iColumn;

            DefaultTableModel resultTableModel = (DefaultTableModel) resultTable.getModel();
            resultTableModel.setRowCount(0);
            resultTableModel.setColumnCount(noOfColumns);
            String columnNames[] = {"Patient ID", "Name", "Gender", "Date of Birth", "address", "contact No"};
            resultTableModel.setColumnIdentifiers(columnNames);

            // get no of rows and columns in foundPatients
            Object[] columnValue = new Object[noOfColumns];
            for (iColumn = 0; iColumn < noOfColumns; iColumn++) {
                columnValue[iColumn] = foundPatient.get(iColumn);
            }
            resultTableModel.addRow(columnValue);
            searchResultPanel.setVisible(true);
        }

    }//GEN-LAST:event_searchUsingIdButtonActionPerformed

    private void searchResultPanelComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_searchResultPanelComponentShown
        // TODO add your handling code here:
    }//GEN-LAST:event_searchResultPanelComponentShown

    private void displayAllButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_displayAllButtonActionPerformed
                ArrayList<ArrayList<String>> foundPatients = null;
        try {
            foundPatients = Select.displayAll();
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        if (foundPatients != null) {
            int noOfRows = foundPatients.size();
            int noOfColumns = foundPatients.get(0).size();
            int iRow;
            int iColumn;

            DefaultTableModel resultTableModel = (DefaultTableModel) resultTable.getModel();
            resultTableModel.setRowCount(0);
            resultTableModel.setColumnCount(noOfColumns);
            String columnNames[] = {"Patient ID", "Name", "Gender", "Date of Birth", "address", "contact No"};
            resultTableModel.setColumnIdentifiers(columnNames);

            // get no of rows and columns in foundPatients
            for (iRow = 0; iRow < noOfRows; iRow++) {
                Object[] columnValue = new Object[noOfColumns];
                for (iColumn = 0; iColumn < noOfColumns; iColumn++) {
                    columnValue[iColumn] = foundPatients.get(iRow).get(iColumn);
                }
                resultTableModel.addRow(columnValue);
            }

            searchResultPanel.setVisible(true);
        }

    }//GEN-LAST:event_displayAllButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel activityPanel;
    private javax.swing.JButton addDoctorButton;
    private javax.swing.JPanel addDoctorPanel;
    private javax.swing.JButton addPatientButton;
    private javax.swing.JPanel addPatientPanel;
    private javax.swing.JButton addTreatmentButton;
    private javax.swing.JPanel addTreatmentPanel;
    private javax.swing.JLabel addressDispLabel;
    private javax.swing.JLabel addressLabel;
    private javax.swing.JScrollPane addressScrollPane;
    private javax.swing.JTextArea addressTextArea;
    private javax.swing.JLabel consultingFeeLabel;
    private javax.swing.JTextField consultingFeeTextField;
    private javax.swing.JLabel contactDispLabel;
    private com.toedter.calendar.JDateChooser dateChooser;
    private javax.swing.JButton delPatientCancelDeleteButton;
    private javax.swing.JButton delPatientConfirmDischargeButton;
    private javax.swing.JPanel delPatientDetailsPanel;
    private javax.swing.JButton delPatientFindButton;
    private javax.swing.JLabel delPatientIdLabel;
    private javax.swing.JTextField delPatientIdTextField;
    private javax.swing.JButton dischargePatientButton;
    private javax.swing.JPanel dischargePatientPanel;
    private javax.swing.JButton displayAllButton;
    private javax.swing.JLabel dobDispLabel;
    private javax.swing.JLabel dobLabel;
    private javax.swing.JLabel doctorContactNoLabel;
    private javax.swing.JTextField doctorContactNoTextField;
    private javax.swing.JLabel doctorIdLabel;
    private javax.swing.JTextField doctorIdTextField;
    private javax.swing.JLabel doctorNameLabel;
    private javax.swing.JTextField doctorNameTextField;
    private javax.swing.JRadioButton femaleRadioButton;
    private javax.swing.JButton homeButton;
    private javax.swing.JPanel homePanel;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JRadioButton maleRadioButton;
    private javax.swing.JPanel menuPanel;
    private javax.swing.JLabel nameDispLabel;
    private javax.swing.JLabel orLabel;
    private javax.swing.JLabel patientContactNoLabel;
    private javax.swing.JTextField patientContactNoTextField;
    private javax.swing.JLabel patientIdSearchLabel;
    private javax.swing.JTextField patientIdSearchTextField;
    private javax.swing.JTextField patientIdTextField;
    private javax.swing.JLabel patientNameLabel;
    private javax.swing.JLabel patientNameSearchLabel;
    private javax.swing.JTextField patientNameSearchTextField;
    private javax.swing.JTextField patientNameTextField;
    private javax.swing.JLabel patientidLabel;
    private javax.swing.JLabel prescriptionLabel;
    private javax.swing.JScrollPane prescriptionScrollPane;
    private javax.swing.JTextArea prescriptionTextArea;
    private javax.swing.JTable resultTable;
    private javax.swing.JScrollPane resultTableScrollPane;
    private javax.swing.JButton saveDoctorButton;
    private javax.swing.JButton savepatientButton;
    private javax.swing.JButton savetreatmentButton;
    private javax.swing.JButton searchButton;
    private javax.swing.JPanel searchPanel;
    private javax.swing.JPanel searchResultPanel;
    private javax.swing.JButton searchUsingIdButton;
    private javax.swing.JLabel searchUsingLabel;
    private javax.swing.JButton searchUsingNameButton;
    private javax.swing.JLabel sexLabel;
    private javax.swing.JLabel specializationLabel;
    private javax.swing.JTextField specializationTextField;
    private javax.swing.JLabel title;
    // End of variables declaration//GEN-END:variables
}


/*
 // removing old panel
 activityPanel.removeAll();
 activityPanel.repaint();
 activityPanel.revalidate();

 // adding the new panel
 activityPanel.add(homePanel);
 activityPanel.repaint();
 activityPanel.revalidate();

 */
